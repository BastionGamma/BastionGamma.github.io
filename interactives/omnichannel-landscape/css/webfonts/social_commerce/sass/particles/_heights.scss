// Converted Variables

// Custom Media Query Variables

/*
  HEIGHTS
    Docs: http://tachyons.io/docs/layout/heights/

  Base:
    h = height
    min-h = min-height
    max-h = max-height
    vh = vertical screen height
    min-vh = min-height vertical screen height
    max-vh = min-height vertical screen height

  Modifiers
    1 = 1st step in spacing scale
    2 = 2nd step in spacing scale
    3 = 3rd step in spacing scale
    4 = 4th step in spacing scale
    5 = 5th step in spacing scale
    6 = 6th step in spacing scale
    7 = 7th step in spacing scale
    8 = 8th step in spacing scale
    9 = 9th step in spacing scale

    -0   = literal value 0
    -10   = literal value 10%
    -20   = literal value 20%
    -25   = literal value 25%
    -30   = literal value 30%
    -40   = literal value 40%
    -50   = literal value 50%
    -60   = literal value 60%
    -70   = literal value 70%
    -75   = literal value 75%
    -80   = literal value 80%
    -90   = literal value 90%
    -100  = literal value 100%

    -third = 33.3333%
    -two-thirds = 66.6666%
    -auto = string value of auto
    -inherit = string value of inherit

  Media Query Extensions:
    -s = small
    -m = medium
    -l = large
    -xl = extra-large
*/

$height-rem-map: (
  1: $space-4,
  2: $space-5,
  3: $space-6,
  4: $space-7,
  5: $space-8,
  6: $space-9,
  7: $space-10,
  8: $space-11,
  9: $space-12
);

$height-percent-map: (0, 10, 20, 25, 30, 40, 50, 60, 70, 75, 80, 90, 100);

$height-math-map: (
  third: percentage( (100 / 3) / 100),
  two-thirds: percentage( (100 / 1.5) / 100)
);

$height-vh-map: (
  25: 25vh,
  30: 30vh,
  40: 40vh,
  50: 50vh,
  56: 56vh,
  75: 75vh,
  100: 100vh
);

@for $index from 1 through length($screen-sizes) {
  @include breakpoints($index) {
    // Height (rem)
    @each $key, $value in $height-rem-map {
      .h#{$key}#{nth($screen-sizes, $index)} { height: #{$value}; }
      .min-h#{$key}#{nth($screen-sizes, $index)} { min-height: #{$value}; }
      .max-h#{$key}#{nth($screen-sizes, $index)} { max-height: #{$value}; }
    }
     
    // Height (%)
    @each $key in $height-percent-map {
      .h#{$key}#{nth($screen-sizes, $index)} { height: percentage($key / 100); }
      .min-h#{$key}#{nth($screen-sizes, $index)} { min-height: percentage($key / 100); }
      .max-h#{$key}#{nth($screen-sizes, $index)} { max-height: percentage($key / 100); }
    }
  
    @each $key, $value in $height-math-map {
      .h-#{$key}#{nth($screen-sizes, $index)} { height: $value; }
      .min-h-#{$key}#{nth($screen-sizes, $index)} { min-height: $value; }
      .max-h-#{$key}#{nth($screen-sizes, $index)} { max-height: $value; }
    }
    
    // Height (vw)
    @each $key, $value in $height-vh-map {
      .vh#{$key}#{nth($screen-sizes, $index)} { height: $value; }
      .min-vh#{$key}#{nth($screen-sizes, $index)} { min-height: $value; }
      .max-vh#{$key}#{nth($screen-sizes, $index)} { max-height: $value; }
    }
  }
}